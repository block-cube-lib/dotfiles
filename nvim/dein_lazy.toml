[[plugins]]
repo = 'Shougo/context_filetype.vim'
hook_add = '''
let g:context_filetype#ignore_patterns = {
    \ 'toml': ['^\s*#\s*'],
    \ }
'''

[[plugins]]
repo = 'Shougo/deoppet.nvim'
depends = ['neosnippet-snippets', 'context_filetype.vim']
if = 'has("nvim")'
hook_source = '''
  call deoppet#initialize()
  call deoppet#custom#option('snippets',
  \ map(globpath(&runtimepath, 'neosnippets', 1, 1),
  \     { _, val -> { 'path': val } }))

  imap <C-k>  <Plug>(deoppet_expand)
  imap <C-f>  <Plug>(deoppet_jump_forward)
  imap <C-b>  <Plug>(deoppet_jump_backward)
  smap <C-f>  <Plug>(deoppet_jump_forward)
  smap <C-b>  <Plug>(deoppet_jump_backward)
'''

[[plugins]]
repo = 'Shougo/neosnippet-snippets'
if = 'has("nvim")'

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']
on_ft = ['vim', 'toml', 'rust', 'markdown']

# markdown
[[plugins]]
repo = 'plasticboy/vim-markdown'
on_ft = ['markdown']
hook_add = '''
  let g:vim_markdown_conceal = 0
  let g:vim_markdown_conceal_code_blocks = 0
  let g:vim_markdown_folding_disabled = 1
'''

# toml
[[plugins]]
repo = 'cespare/vim-toml'
on_ft = ['toml']

# plantuml
[[plugins]]
repo = 'aklt/plantuml-syntax'
on_ft = ['plantuml']

# fish
[[plugins]]
repo = 'dag/vim-fish'
on_ft = ['fish']

# swift
[[plugins]]
repo = 'keith/swift.vim'
on_ft = ['swift']

# rust
[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = ['rust']
hook_source = '''
let g:rustfmt_autosave = 0

if executable("rustfmt")
  nnoremap [RustFmt] <Nop>
  nmap <Space>f [RustFmt]
  nnoremap <silent> [RustFmt] :<C-u>RustFmt<CR>
'''

# ron
[[plugins]]
repo = 'ron-rs/ron.vim'
on_ft = ['ron']
